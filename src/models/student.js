const mongoose = require("mongoose");

const helpCookingSchema = new mongoose.Schema({
  location: String,
  dayHelpCooking: Date,
});

const achievementSchema = new mongoose.Schema({
  semester: Number,
  schoolYear: String,
  content: String,
});

const tuitionFeeSchema = new mongoose.Schema({
  totalAmount: String,
  semester: String,
  schoolYear: String,
  content: String,
  status: String,
});

const physicalResultSchema = new mongoose.Schema({
  semester: String,
  run3000m: String,
  run100m: String,
  pullUpBar: Number,
  swimming100m: String,
  practise: String,
});

const learningInformationSchema = new mongoose.Schema({
  semester: String,
  CPA: Number,
  GPA: Number,
  cumulativeCredit: Number,
  studentLevel: Number,
  warningLevel: Number,
  totalDebt: Number,
  learningStatus: String,
});

// Schema cho kết quả học tập chi tiết theo từng môn học
const subjectResultSchema = new mongoose.Schema({
  subjectCode: { type: String, required: true }, // Mã môn học
  subjectName: { type: String, required: true }, // Tên môn học
  credits: { type: Number, required: true }, // Số tín chỉ
  letterGrade: {
    type: String,
    enum: ["A+", "A", "B+", "B", "C+", "C", "D+", "D", "F"],
    required: true,
  }, // Điểm chữ
  gradePoint4: { type: Number, required: true }, // Điểm hệ 4
  gradePoint10: { type: Number, required: true }, // Điểm hệ 10
});

// Schema cho kết quả học tập theo học kỳ
const semesterResultSchema = new mongoose.Schema({
  semester: { type: String, enum: ["HK1", "HK2", "HK3"], required: true }, // Học kỳ
  schoolYear: { type: String, required: true }, // Năm học
  subjects: [subjectResultSchema], // Danh sách môn học
  totalCredits: { type: Number, default: 0 }, // Tổng số tín chỉ
  averageGrade4: { type: Number, default: 0 }, // Điểm trung bình hệ 4
  averageGrade10: { type: Number, default: 0 }, // Điểm trung bình hệ 10
  cumulativeCredits: { type: Number, default: 0 }, // Tổng tín chỉ tích lũy
  cumulativeGrade4: { type: Number, default: 0 }, // Điểm tích lũy hệ 4
  cumulativeGrade10: { type: Number, default: 0 }, // Điểm tích lũy hệ 10

  // Thống kê nợ theo học kỳ
  debtCredits: { type: Number, default: 0 }, // Tổng số tín chỉ nợ (môn F hoặc hệ 4 = 0)
  failedSubjects: { type: Number, default: 0 }, // Số môn nợ (F)

  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now },
});

// Schema cho kết quả học tập theo năm học
const yearlyResultSchema = new mongoose.Schema({
  schoolYear: { type: String, required: true }, // Năm học (VD: 2023-2024)
  semesters: [semesterResultSchema], // Danh sách các học kỳ trong năm

  // Thống kê tổng hợp theo năm
  totalCredits: { type: Number, default: 0 }, // Tổng số tín chỉ cả năm
  averageGrade4: { type: Number, default: 0 }, // Điểm trung bình hệ 4 cả năm
  averageGrade10: { type: Number, default: 0 }, // Điểm trung bình hệ 10 cả năm
  cumulativeCredits: { type: Number, default: 0 }, // Tổng tín chỉ tích lũy cuối năm
  cumulativeGrade4: { type: Number, default: 0 }, // Điểm tích lũy hệ 4 cuối năm
  cumulativeGrade10: { type: Number, default: 0 }, // Điểm tích lũy hệ 10 cuối năm

  // Xếp loại Đảng viên theo năm (lấy từ học kỳ cuối cùng)
  partyRating: {
    decisionNumber: { type: String }, // Số quyết định
    rating: {
      type: String,
      enum: ["HTXSNV", "HTTNV", "HTNV", "KHTNV"],
    },
  },

  // Xếp loại rèn luyện theo năm (lấy từ học kỳ cuối cùng)
  trainingRating: {
    type: String,
    enum: ["Yếu", "Trung bình", "Khá", "Tốt"],
  },

  // Thống kê môn học theo năm
  totalSubjects: { type: Number, default: 0 }, // Tổng số môn học
  passedSubjects: { type: Number, default: 0 }, // Số môn đạt
  failedSubjects: { type: Number, default: 0 }, // Số môn không đạt
  debtCredits: { type: Number, default: 0 }, // Tổng số tín chỉ nợ của cả năm

  // Trạng thái học tập theo năm
  academicStatus: {
    type: String,
    enum: ["Tốt", "Khá", "Trung bình", "Yếu", "Kém"],
  },

  // Năm học hiện tại dựa trên số tín chỉ tích lũy
  studentLevel: { type: Number, default: 1 },

  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now },
});

const cutRiceSchema = new mongoose.Schema({
  monday: {
    breakfast: Boolean,
    lunch: Boolean,
    dinner: Boolean,
  },
  tuesday: {
    breakfast: Boolean,
    lunch: Boolean,
    dinner: Boolean,
  },
  wednesday: {
    breakfast: Boolean,
    lunch: Boolean,
    dinner: Boolean,
  },
  thursday: {
    breakfast: Boolean,
    lunch: Boolean,
    dinner: Boolean,
  },
  friday: {
    breakfast: Boolean,
    lunch: Boolean,
    dinner: Boolean,
  },
  saturday: {
    breakfast: Boolean,
    lunch: Boolean,
    dinner: Boolean,
  },
  sunday: {
    breakfast: Boolean,
    lunch: Boolean,
    dinner: Boolean,
  },
  // Thông tin về lịch cắt cơm
  isAutoGenerated: {
    type: Boolean,
    default: true,
  },
  lastUpdated: {
    type: Date,
    default: Date.now,
  },
  notes: String,
});

// Schema cho thông tin người thân
const familyMemberSchema = new mongoose.Schema({
  relationship: { type: String, required: true }, // Quan hệ (bố, mẹ, anh, chị, em...)
  fullName: { type: String, required: true }, // Họ và tên
  birthday: { type: Date, required: true }, // Ngày sinh
  occupation: { type: String, required: true }, // Nghề nghiệp
});

// Schema cho mối quan hệ có yếu tố nước ngoài
const foreignRelationSchema = new mongoose.Schema({
  relationship: { type: String, required: true }, // Quan hệ (chú ruột, cô ruột, anh em họ...)
  fullName: { type: String, required: true }, // Họ và tên
  birthday: { type: Date, required: true }, // Ngày sinh
  country: { type: String, required: true }, // Quốc gia (Liên bang Nga, Ý...)
  reason: { type: String, required: true }, // Lý do (định cư, du học, công tác...)
  nationality: { type: String, required: true }, // Quốc tịch
});

const studentSchema = mongoose.model(
  "Student",
  new mongoose.Schema({
    studentId: { type: String, unique: true },
    fullName: { type: String, unique: true },
    gender: String,
    birthday: Date,
    hometown: String,
    ethnicity: String,
    religion: String,
    currentAddress: String,
    placeOfBirth: String,
    phoneNumber: String,
    email: String,
    cccdNumber: String,
    partyMemberCardNumber: String,
    enrollment: Number,
    graduationDate: Date,
    university: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "University",
    },
    organization: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Organization",
    },
    educationLevel: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "education_level",
    },
    class: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Class",
    },

    unit: String,
    rank: String,
    positionGovernment: String,
    positionParty: String,
    fullPartyMember: Date,
    probationaryPartyMember: Date,
    dateOfEnlistment: Date,
    avatar: {
      type: String,
      default:
        "https://i.pinimg.com/736x/81/09/3a/81093a0429e25b0ff579fa41aa96c421.jpg",
    },
    timeTable: [
      {
        type: mongoose.Schema.Types.ObjectId,
        ref: "time_table",
      },
    ],
    violation: [
      {
        type: mongoose.Schema.Types.ObjectId,
        ref: "Violation",
      },
    ],
    vacationSchedule: [
      {
        type: mongoose.Schema.Types.ObjectId,
        ref: "vacation_schedule",
      },
    ],
    helpCooking: [helpCookingSchema],
    achievement: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Achievement",
    },
    tuitionFee: [tuitionFeeSchema],
    physicalResult: [physicalResultSchema],
    learningInformation: [learningInformationSchema],
    semesterResults: [semesterResultSchema],
    yearlyResults: [yearlyResultSchema], // Kết quả học tập theo năm
    // CPA hiện tại của học viên (từ học kỳ gần nhất, để hiển thị nhanh trên dashboard)
    currentCpa4: { type: Number, default: 0 },
    currentCpa10: { type: Number, default: 0 },
    cutRice: [cutRiceSchema],
    // Thông tin người thân
    familyMembers: [familyMemberSchema],
    // Mối quan hệ có yếu tố nước ngoài
    foreignRelations: [foreignRelationSchema],
  })
);

module.exports = studentSchema;
